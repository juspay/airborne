program
  .command("{{{actionName}}} [params...]")
  .description(`
Allowed params for {{{actionName}}}:
  {{{paramDocs}}}
`)
  .usage('<action> [params...]')
  .addHelpText('after', `
Allowed params for {{{actionName}}}:
  {{{paramDocs}}}
`)
  .action(async (params = []) => {

    const options = params.reduce((acc, kv) => {
        const [key, val] = kv.split('=');
        if (key && val !== undefined) acc[key] = val;
        return acc;
    }, {});

    const inputs = JSON.parse({{{inputTypes}}});
    let fileInputKey = ""
    for(let i = 0; i < inputs.length; i++){
        if(inputs[i].type == "FileStream"){
            fileInputKey = inputs[i].name;
            break;
        }
    }

    if(fileInputKey == ""){
        console.log("Error: Unknown Key for File Input");
        process.exit(1);
    }

    const fd = await open(options.filePath);
    const stream = fd.createReadStream();

    options[fileInputKey].data = stream;

    delete options.filePath;

    try {
        const command = new {{{cmd}}}(options);
        const output = await client.send(command);
        console.log(JSON.stringify(output, null, '\t'));
        process.exit(0);
    } catch (err) {
        console.error("Error executing:", err);
        process.exit(1);
    }
});
