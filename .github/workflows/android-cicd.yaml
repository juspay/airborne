name: Publish to Maven Central

on:
  push:
    # Trigger the workflow only when a new tag is pushed
    # that starts with 'v' (e.g., v1.0.0, v1.2.3)
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Optional: quickly determine which modules changed
      - name: Filter paths
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            hyper_ota:
              - 'android/hyper-ota/**'
            hyper_eta_react:
              - 'android/hyper-eta-react/**'

      - name: Set up Temurin JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Grant execute for Gradle wrapper
        run: chmod +x gradlew
        working-directory: android

      # Fail fast if version resolves to SNAPSHOT (Central Portal only accepts releases)
      - name: Ensure run is a release tag (else skip)
        working-directory: android
        run: |
          if [ "${GITHUB_REF_TYPE}" != "tag" ]; then
            echo "Not a tag push; skipping Central release."
            exit 78
          fi

          TAG="${GITHUB_REF_NAME}"
          echo "Detected tag: $TAG"

          if ! echo "$TAG" | grep -Eq '^v[0-9]+(\.[0-9]+){1,2}([-.].+)?$'; then
            echo "Tag '$TAG' does not look like a version."
            exit 1
          fi

          if echo "$TAG" | grep -qi 'SNAPSHOT'; then
            echo "Tag contains SNAPSHOT; skipping."
            exit 78
          fi

          VERSION="${TAG#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Import GPG
        run: |
          echo "${SIGNING_KEY}" | base64 -d > /tmp/key.asc
          gpg --batch --import /tmp/key.asc
          # Export the decoded key for Gradle
          echo "DECODED_SIGNING_KEY<<EOF" >> $GITHUB_ENV
          echo "${SIGNING_KEY}" | base64 -d >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}

      # Publish aggregation (both modules). nmcp builds a single ZIP and uploads to Portal API
      - name: Publish to Maven Central (Central Portal)
        working-directory: android
        run: ./gradlew --no-daemon publishAggregationToCentralPortal
        env:
          # Central Portal token (username/password pair)
          SONATYPE_MAVEN_USERNAME: ${{ secrets.SONATYPE_MAVEN_USERNAME }}
          SONATYPE_MAVEN_PASSWORD: ${{ secrets.SONATYPE_MAVEN_PASSWORD }}

          # Gradle signing properties (nmcp uses existing publications)
          ORG_GRADLE_PROJECT_signingKey: ${{ env.DECODED_SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}